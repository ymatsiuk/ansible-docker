---

- name: Check if docker installed
  shell: dpkg-query -s "{{ docker_pkg_name }}" 2>&1
  ignore_errors: true
  register: docker_installed_check

- name: Setting docker_install_needed fact
  set_fact:
    docker_install_needed: "{{ docker_installed_check.failed is defined and docker_upgrade_needed is not defined }}"

- name: Install docker
  include_role:
    name: docker
    tasks_from: install
  when: docker_install_needed

- name: Getting info facts
  uri:
    url: http://127.0.0.1:2375/info
  register: info
- set_fact:
    docker_info_facts: "{{ info.json }}"

- name: Intitialize swarm
  include_role:
    name: docker
    tasks_from: swarm
  when: docker_info_facts.Swarm.LocalNodeState == 'inactive'

- name: Update facts
  uri:
    url: http://127.0.0.1:2375/info
  register: info
- set_fact:
    docker_info_facts: "{{ info.json }}"

- name: Setting swarm node facts
  uri:
    url: http://127.0.0.1:2375/nodes?filters={"id":{"{{ docker_info_facts.Swarm.NodeID }}":true}}
  register: node
  delegate_to: "{{ groups['docker-swarm-managers'][0] }}"
  when: docker_info_facts.Swarm.LocalNodeState == "active"
- set_fact:
    docker_swarm_node_facts: "{{ node.json }}"
  when: docker_info_facts.Swarm.LocalNodeState == "active"

# FIXME: check template for conditions and implement correct mapping
- name: Set/update labels
  include_role:
    name: docker
    tasks_from: labels

...
